{"ast":null,"code":"define([\"../core\", \"../core/stripAndCollapse\", \"../var/isFunction\", \"../var/rnothtmlwhite\", \"../data/var/dataPriv\", \"../core/init\"], function (jQuery, stripAndCollapse, isFunction, rnothtmlwhite, dataPriv) {\n  \"use strict\";\n\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n\n    return [];\n  }\n\n  jQuery.fn.extend({\n    addClass: function (value) {\n      var classNames, cur, curValue, className, i, finalValue;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      classNames = classesToArray(value);\n\n      if (classNames.length) {\n        return this.each(function () {\n          curValue = getClass(this);\n          cur = this.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            for (i = 0; i < classNames.length; i++) {\n              className = classNames[i];\n\n              if (cur.indexOf(\" \" + className + \" \") < 0) {\n                cur += className + \" \";\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              this.setAttribute(\"class\", finalValue);\n            }\n          }\n        });\n      }\n\n      return this;\n    },\n    removeClass: function (value) {\n      var classNames, cur, curValue, className, i, finalValue;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n\n      classNames = classesToArray(value);\n\n      if (classNames.length) {\n        return this.each(function () {\n          curValue = getClass(this); // This expression is here for better compressibility (see addClass)\n\n          cur = this.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            for (i = 0; i < classNames.length; i++) {\n              className = classNames[i]; // Remove *all* instances\n\n              while (cur.indexOf(\" \" + className + \" \") > -1) {\n                cur = cur.replace(\" \" + className + \" \", \" \");\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              this.setAttribute(\"class\", finalValue);\n            }\n          }\n        });\n      }\n\n      return this;\n    },\n    toggleClass: function (value, stateVal) {\n      var classNames,\n          className,\n          i,\n          self,\n          type = typeof value,\n          isValidValue = type === \"string\" || Array.isArray(value);\n\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n\n      classNames = classesToArray(value);\n      return this.each(function () {\n        if (isValidValue) {\n          // Toggle individual class names\n          self = jQuery(this);\n\n          for (i = 0; i < classNames.length; i++) {\n            className = classNames[i]; // Check each className given, space separated list\n\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          } // Toggle whole class name\n\n        } else if (value === undefined || type === \"boolean\") {\n          className = getClass(this);\n\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className);\n          } // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n\n\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function (selector) {\n      var className,\n          elem,\n          i = 0;\n      className = \" \" + selector + \" \";\n\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n});","map":{"version":3,"names":["define","jQuery","stripAndCollapse","isFunction","rnothtmlwhite","dataPriv","getClass","elem","getAttribute","classesToArray","value","Array","isArray","match","fn","extend","addClass","classNames","cur","curValue","className","i","finalValue","each","j","call","length","nodeType","indexOf","setAttribute","removeClass","arguments","attr","replace","toggleClass","stateVal","self","type","isValidValue","hasClass","undefined","set","get","selector"],"sources":["C:/Users/Acer/Desktop/Mern Project/hospital/node_modules/jquery/src/attributes/classes.js"],"sourcesContent":["define( [\n\t\"../core\",\n\t\"../core/stripAndCollapse\",\n\t\"../var/isFunction\",\n\t\"../var/rnothtmlwhite\",\n\t\"../data/var/dataPriv\",\n\t\"../core/init\"\n], function( jQuery, stripAndCollapse, isFunction, rnothtmlwhite, dataPriv ) {\n\n\"use strict\";\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classNames, cur, curValue, className, i, finalValue;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\tif ( classNames.length ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tcurValue = getClass( this );\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\t\tclassName = classNames[ i ];\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + className + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += className + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classNames, cur, curValue, className, i, finalValue;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\tif ( classNames.length ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tcurValue = getClass( this );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\t\tclassName = classNames[ i ];\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + className + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + className + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar classNames, className, i, self,\n\t\t\ttype = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\treturn this.each( function() {\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\tself = jQuery( this );\n\n\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\tclassName = classNames[ i ];\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n} );\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}